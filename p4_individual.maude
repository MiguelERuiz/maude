fmod RED is
 pr NAT .
 pr STRING .
 pr TABLA .
 pr IDNODO .

 sorts Localizacion Sistema Contenidos Nodo Msj .
 subsort Localizacion < Sistema .
 subsort Nodo < Contenidos .
 subsort Msj < Contenidos .
 *** Define los subtipos entre Contenidos y Nodo y Msj

 *** Estados de un nodo
 --- ops inactivo activo : ->  EstadoCentro [ctor] .
 ops inactivo esperando activo : -> Estado [ctor] .

 *** Tipos de nodo
 --- extremo(Id, IdLocCentro, Estado, Amigos, MsgsRecibidos)
 op extremo : IdNodo Nat Estado ListaAmigos String -> Nodo [ctor] .
 --- centro(Id, TablaHash)
 op centro : IdNodo TablaHash -> Nodo [ctor] .

 *** Tipos de mensaje
 --- info(IdLocCentro, IdLocEx, IdNodoSrc)
 op info : Nat Nat IdNodo -> Msj [ctor] .
 --- respuesta-info(IdNodoDest)
 op respuesta-info : IdNodo -> Msj [ctor] .
 --- toIdNodoDest:Str
 op to_:_ : -> IdNodo String -> Msj [ctor] .

 *** Contenidos
 op vacio : -> Contenidos [ctor] .
 op __ : Contenidos Contenidos -> Contenidos [ctor assoc comm id: vacio ] .

 *** Localizacion y Sistema
 op {_|_} : Nat Contenidos -> Localizacion [ctor] .
 op none : -> Sistema [ctor] .
 op __ : Sistema Sistema -> Sistema [ctor assoc comm id: none] .

 *** Definicion de variables
 vars S S' : Sistema .
 vars IdLoc IdLoc' : Nat .
 vars IdN IdN' : IdNodo .
 vars N N' : Nodo .
 vars C C' : Contenidos .

 *** Función que define el número de nodos de un sistema
 eq numNodos : Sistema -> Nat .
 op numNodos(none) = 0 .
 op numNodos({IdLoc|N C} S') = 1 + numNodos(S') .

 *** Termina de definir constructores
endfm

mod COMPORTAMIENTO is
 *** Importa los modulos correspondientes

 *** Define el comportamiento de la red mediante reglas
endm

mod EJEMPLO is
 *** Importa los modulos correspondientes

 op init : -> Sistema .
 *** Define un término inicial sobre el que probar las propiedades siguiendo el enunciado
 *** red init = { 0 | ... }
 ***            { 1 | ... }
 ***            ...
endm

rew init .

*** search init ...

load model-checker

mod PROPS is
 *** Importa los modulos correspondientes

 *** Define las propiedades
endm

mod TEST is
 *** Importa los modulos correspondientes
endm

eof

*** Define y comprueba las propiedades

red modelCheck(init, ...) .